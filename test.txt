import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import com.microsoft.aad.msal4j.*;

import java.net.MalformedURLException;
import java.util.Collections;

@Configuration
public class AzureAdConfig {
    // existing configurations...

    @Bean
    public ConfidentialClientApplication confidentialClientApplication() throws MalformedURLException {
        return ConfidentialClientApplication.builder(clientId, ClientCredentialFactory.createFromSecret(clientSecret))
                .authority(authority)
                .build();
    }

    @Bean
    public IAuthenticationResultProvider authenticationResultProvider() {
        return () -> {
            ClientCredentialParameters parameters = ClientCredentialParameters.builder(Collections.singleton(scope)).build();
            return confidentialClientApplication().acquireToken(parameters).join();
        };
    }
}


--------------------------


public interface IAuthenticationResultProvider {
    IAuthenticationResult getAuthenticationResult() throws Exception;
}


------------------


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ClaimsController {

    @Autowired
    private IAuthenticationResultProvider authResultProvider;

    @GetMapping("/claims")
    public Map<String, ?> getClaims() throws Exception {
        IAuthenticationResult result = authResultProvider.getAuthenticationResult();
        return result.account().claims();
    }
}
